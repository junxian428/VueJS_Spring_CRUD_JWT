{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Items\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Add Item\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  key: 1\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Update\", -1 /* HOISTED */);\nconst _hoisted_7 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createCommentVNode(\" Form for creating new item \"), _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.addItem && $options.addItem(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newItemText = $event),\n    type: \"text\",\n    placeholder: \"Enter item text\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newItemText]]), _hoisted_2], 32 /* HYDRATE_EVENTS */), _createCommentVNode(\" List of items \"), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.items, (item, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.id\n    }, [index !== $data.editIndex ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, [_createTextVNode(_toDisplayString(item.text) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.editItem(index)\n    }, \"Edit\", 8 /* PROPS */, _hoisted_4)])) : (_openBlock(), _createElementBlock(\"span\", _hoisted_5, [_createElementVNode(\"form\", {\n      onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.updateItem && $options.updateItem(...args), [\"prevent\"]))\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.editedItemText = $event),\n      type: \"text\",\n      required: \"\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.editedItemText]]), _hoisted_6, _createElementVNode(\"button\", {\n      onClick: _cache[3] || (_cache[3] = (...args) => $options.cancelEdit && $options.cancelEdit(...args))\n    }, \"Cancel\")], 32 /* HYDRATE_EVENTS */)])), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteItem(item.id)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_7)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","type","_createElementBlock","_hoisted_1","_createCommentVNode","onSubmit","_cache","_withModifiers","args","$options","addItem","$data","newItemText","$event","placeholder","required","_hoisted_2","_Fragment","_renderList","items","item","index","key","id","editIndex","_hoisted_3","text","onClick","editItem","_hoisted_4","_hoisted_5","updateItem","editedItemText","_hoisted_6","cancelEdit","deleteItem","_hoisted_7"],"sources":["D:\\Project\\VUEJSSPRING_CRUD_JWT\\vue-crud-api-jwt\\src\\views\\Items.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Items</h1>\r\n  \r\n      <!-- Form for creating new item -->\r\n      <form @submit.prevent=\"addItem\">\r\n        <input v-model=\"newItemText\" type=\"text\" placeholder=\"Enter item text\" required>\r\n        <button type=\"submit\">Add Item</button>\r\n      </form>\r\n  \r\n      <!-- List of items -->\r\n      <ul>\r\n        <li v-for=\"(item, index) in items\" :key=\"item.id\">\r\n          <span v-if=\"index !== editIndex\">\r\n            {{ item.text }}\r\n            <button @click=\"editItem(index)\">Edit</button>\r\n          </span>\r\n          <span v-else>\r\n            <form @submit.prevent=\"updateItem\">\r\n              <input v-model=\"editedItemText\" type=\"text\" required>\r\n              <button type=\"submit\">Update</button>\r\n              <button @click=\"cancelEdit\">Cancel</button>\r\n            </form>\r\n          </span>\r\n          <button @click=\"deleteItem(item.id)\">Delete</button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        items: [],                // Array to store items\r\n        newItemText: '',          // Text for new item\r\n        editIndex: null,          // Index of item being edited (-1 for new item)\r\n        editedItemText: '',       // Text for the item being edited\r\n      };\r\n    },\r\n    mounted() {\r\n      this.fetchItems();\r\n    },\r\n    methods: {\r\n      fetchItems() {\r\n\r\n\r\n        const sessionCookie = document.cookie.replace(\r\n          /(?:(?:^|.*;\\s*)access_Token\\s*\\=\\s*([^;]*).*$)|^.*$/,\r\n          '$1'\r\n        );\r\n        const blobCookie = document.cookie.replace(\r\n            /(?:(?:^|.*;\\s*)blob_data\\s*\\=\\s*([^;]*).*$)|^.*$/,\r\n            '$1'\r\n          );\r\n\r\n        \r\n        axios.get('http://localhost:8082/api/items', {\r\n          headers: {\r\n            Authorization: `Bearer ${sessionCookie}`,\r\n            Cookie: `blob_data=${blobCookie}`\r\n          },\r\n        })\r\n          .then(response => {\r\n            this.items = response.data;\r\n          })\r\n          .catch(error => {\r\n            console.error('Error fetching items:', error);\r\n          });\r\n      },\r\n      addItem() {\r\n\r\n        const sessionCookie = document.cookie.replace(\r\n          /(?:(?:^|.*;\\s*)access_Token\\s*\\=\\s*([^;]*).*$)|^.*$/,\r\n          '$1'\r\n        );\r\n\r\n\r\n\r\n        const newItem = {\r\n          text: this.newItemText,\r\n        };\r\n        console.log(newItem);\r\n        axios.post('http://localhost:8082/api/items', newItem, {\r\n          headers: {\r\n            Authorization: `Bearer ${sessionCookie}`,\r\n          },\r\n        })\r\n          .then(response => {\r\n            this.items.push(response.data);\r\n            this.newItemText = '';\r\n          })\r\n          .catch(error => {\r\n            console.error('Error adding item:', error);\r\n          });\r\n      },\r\n      editItem(index) {\r\n        this.editIndex = index;\r\n        this.editedItemText = this.items[index].text;\r\n      },\r\n      updateItem() {\r\n\r\n        const sessionCookie = document.cookie.replace(\r\n          /(?:(?:^|.*;\\s*)access_Token\\s*\\=\\s*([^;]*).*$)|^.*$/,\r\n          '$1'\r\n        );\r\n\r\n        \r\n        const updatedItem = {\r\n          id: this.items[this.editIndex].id,\r\n          text: this.editedItemText,\r\n        };\r\n  \r\n        axios.put(`http://localhost:8082/api/items/${updatedItem.id}`, updatedItem, {\r\n          headers: {\r\n            Authorization: `Bearer ${sessionCookie}`,\r\n          },\r\n        })\r\n          .then(() => {\r\n            this.items[this.editIndex].text = this.editedItemText;\r\n            this.cancelEdit();\r\n          })\r\n          .catch(error => {\r\n            console.error('Error updating item:', error);\r\n          });\r\n      },\r\n      cancelEdit() {\r\n        this.editIndex = null;\r\n        this.editedItemText = '';\r\n      },\r\n      deleteItem(itemId) {\r\n        const sessionCookie = document.cookie.replace(\r\n          /(?:(?:^|.*;\\s*)access_Token\\s*\\=\\s*([^;]*).*$)|^.*$/,\r\n          '$1'\r\n        );\r\n        axios.delete(`http://localhost:8082/api/items/${itemId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${sessionCookie}`,\r\n          },\r\n        })\r\n          .then(() => {\r\n            this.items = this.items.filter(item => item.id !== itemId);\r\n          })\r\n          .catch(error => {\r\n            console.error('Error deleting item:', error);\r\n          });\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  "],"mappings":";gCAEMA,mBAAA,CAAc,YAAV,OAAK;gCAKPA,mBAAA,CAAuC;EAA/BC,IAAI,EAAC;AAAQ,GAAC,UAAQ;;;;;;;;gCAaxBD,mBAAA,CAAqC;EAA7BC,IAAI,EAAC;AAAQ,GAAC,QAAM;;;uBAnBtCC,mBAAA,CA0BM,cAzBJC,UAAc,EAEdC,mBAAA,gCAAmC,EACnCJ,mBAAA,CAGO;IAHAK,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;sBAC5BR,mBAAA,CAAgF;+DAAhEW,KAAA,CAAAC,WAAW,GAAAC,MAAA;IAAEZ,IAAI,EAAC,MAAM;IAACa,WAAW,EAAC,iBAAiB;IAACC,QAAQ,EAAR;iDAAvDJ,KAAA,CAAAC,WAAW,E,GAC3BI,UAAuC,C,4BAGzCZ,mBAAA,mBAAsB,EACtBJ,mBAAA,CAeK,c,kBAdHE,mBAAA,CAaKe,SAAA,QAAAC,WAAA,CAbuBP,KAAA,CAAAQ,KAAK,GAArBC,IAAI,EAAEC,KAAK;yBAAvBnB,mBAAA,CAaK;MAb+BoB,GAAG,EAAEF,IAAI,CAACG;QAChCF,KAAK,KAAKV,KAAA,CAAAa,SAAS,I,cAA/BtB,mBAAA,CAGO,QAAAuB,UAAA,G,kCAFFL,IAAI,CAACM,IAAI,IAAG,GACf,iBAAA1B,mBAAA,CAA8C;MAArC2B,OAAK,EAAAd,MAAA,IAAEJ,QAAA,CAAAmB,QAAQ,CAACP,KAAK;OAAG,MAAI,iBAAAQ,UAAA,E,oBAEvC3B,mBAAA,CAMO,QAAA4B,UAAA,GALL9B,mBAAA,CAIO;MAJAK,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAsB,UAAA,IAAAtB,QAAA,CAAAsB,UAAA,IAAAvB,IAAA,CAAU;wBAC/BR,mBAAA,CAAqD;iEAArCW,KAAA,CAAAqB,cAAc,GAAAnB,MAAA;MAAEZ,IAAI,EAAC,MAAM;MAACc,QAAQ,EAAR;mDAA5BJ,KAAA,CAAAqB,cAAc,E,GAC9BC,UAAqC,EACrCjC,mBAAA,CAA2C;MAAlC2B,OAAK,EAAArB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAyB,UAAA,IAAAzB,QAAA,CAAAyB,UAAA,IAAA1B,IAAA,CAAU;OAAE,QAAM,E,+BAGtCR,mBAAA,CAAoD;MAA3C2B,OAAK,EAAAd,MAAA,IAAEJ,QAAA,CAAA0B,UAAU,CAACf,IAAI,CAACG,EAAE;OAAG,QAAM,iBAAAa,UAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}