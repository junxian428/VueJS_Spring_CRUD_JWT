{"ast":null,"code":"import { createElementVNode as _createElementVNode, withModifiers as _withModifiers, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form-signin\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<h1 class=\\\"h3 mb-3 fw-normal\\\">Please sign in</h1><div class=\\\"form-floating\\\"><input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" placeholder=\\\"name@example.com\\\"><label>Email</label></div><div class=\\\"form-floating\\\"><input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Password\\\"><label>Password</label></div><button class=\\\"w-100 btn btn-lg btn-primary\\\" type=\\\"submit\\\">Submit</button>\", 4);\nconst _hoisted_6 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"main\", _hoisted_1, [_createElementVNode(\"form\", {\n    onSubmit: _cache[0] || (_cache[0] = _withModifiers((...args) => $setup.submit && $setup.submit(...args), [\"prevent\"]))\n  }, _hoisted_6, 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"names":["class","_hoisted_2","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$setup","submit"],"sources":["D:\\Project\\VUEJSSPRING_CRUD_JWT\\vue-crud-api-jwt\\src\\views\\Login.vue"],"sourcesContent":["<template>\r\n    <main class=\"form-signin\">\r\n      <form @submit.prevent=\"submit\">\r\n        <h1 class=\"h3 mb-3 fw-normal\">Please sign in</h1>\r\n  \r\n        <div class=\"form-floating\">\r\n          <input type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"name@example.com\">\r\n          <label>Email</label>\r\n        </div>\r\n  \r\n        <div class=\"form-floating\">\r\n          <input type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\">\r\n          <label>Password</label>\r\n        </div>\r\n  \r\n        <button class=\"w-100 btn btn-lg btn-primary\" type=\"submit\">Submit</button>\r\n      </form>\r\n    </main>\r\n  </template>\r\n  \r\n  <script>\r\n  import {useRouter} from \"vue-router\";\r\n  import axios from \"axios\";\r\n  import VueCookies from 'vue-cookies';\r\n\r\n  //\r\n\r\n  export default {\r\n    name: \"Login\",\r\n    data() {\r\n    return {\r\n      email: '',\r\n      password: ''\r\n    };\r\n    },\r\n    \r\n    setup() {\r\n        const router = useRouter();\r\n  \r\n        const submit = async e => {\r\n\r\n        //\r\n\r\n        //\r\n        const form = new FormData(e.target);\r\n  \r\n        const inputs = Object.fromEntries(form.entries());\r\n        console.log(inputs);\r\n        const loginData = {\r\n            email: inputs.email,\r\n            password: inputs.password\r\n        };\r\n        const {data} = await axios.post('http://localhost:8086/api/v1/auth/authenticate', loginData);\r\n        console.log(data);\r\n        console.log(data['access_token']);\r\n\r\n\r\n        localStorage.setItem('access_Token', data['access_token']);\r\n        VueCookies.set('access_Token',  data['access_token'], '7d'); // Save the access token in a cookie for 7 days\r\n\r\n        //this.setCookie('access_Token',  data['access_token'], 7);\r\n       // axios.defaults.headers.common['Authorization'] = `Bearer ${data.access_token}`;\r\n        //console.log(data.token);\r\n        await router.push('/');\r\n      }\r\n  \r\n\r\n      \r\n      return {\r\n        submit\r\n      }\r\n    }\r\n  }\r\n  </script>"],"mappings":";;EACUA,KAAK,EAAC;AAAa;;oBAErBC,UAAiD,C;;uBAFrDC,mBAAA,CAgBO,QAhBPC,UAgBO,GAfLC,mBAAA,CAcO;IAdAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,MAAA,CAAAC,MAAA,IAAAD,MAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}